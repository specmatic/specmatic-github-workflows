name: Create a github release with Gradle
description: Bumps version, runs tests, creates tags, and makes a release using Gradle


inputs:
  gradle-extra-args:
    description: "Extra arguments to pass to the gradle command"
    required: false
    default: ""

  version-properties-file:
    description: "The file containing the version property"
    required: false
    default: "gradle.properties"

  download-action-workflow:
    description: "The workflow action name/path to download the artifacts"
    required: false
    default: gradle.yml

outputs:
  specmatic-version:
    description: "The version of Specmatic that was used to run the tests"
    value: ${{ steps.specmatic-version.outputs.version }}

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: "17"
        distribution: "temurin"

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@94baf225fe0a508e581a564467443d0e2379123b # v4.3.0

    - name: Download Gradle Artifacts
      uses: dawidd6/action-download-artifact@v8
      with:
        workflow: ${{ inputs.download-action-workflow }}
        allow_forks: false

    - name: Release artifacts
      run: ./gradlew release ${{ inputs.gradle-extra-args }}
      shell: bash

    - name: Get version
      id: specmatic-version
      # this is complex because some builds run on macos, which uses a different toolchain (bsd) than linux (gnu)
      run: echo "specmatic-version=$(grep '^\s*version\s*=' ${{ inputs.version-properties-file }} | cut -d'=' -f2 | sed 's/^[[:space:]]*//') | head -n1" >> $GITHUB_OUTPUT
      shell: bash
